buildscript {
    ext.kotlin_version = '1.2.30'
    ext.dokka_version = '0.9.15'
    ext.shadow_version = '1.2.4'
    ext.junit_version = '4.12'
    ext.spotless_version = '3.8.0'
    ext.slf4j_version = '1.7.25'
    ext.logback_version = '1.2.3'
    ext.kotlin_logging_version = '1.5.4'

    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:$shadow_version"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:$spotless_version"
        classpath "com.github.ben-manes:gradle-versions-plugin:0.17.0"
    }
}

allprojects {
    group 'com.github.kvnxiao'
    version '0.9.0'

    task wrapper(type: Wrapper) {
        gradleVersion = '4.5.1'
        distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
    }
}

subprojects {
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
    }

    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'org.jetbrains.dokka'
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: "com.diffplug.gradle.spotless"
    apply plugin: 'com.github.ben-manes.versions'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
        implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
        implementation "org.slf4j:slf4j-api:$slf4j_version"
        implementation "io.github.microutils:kotlin-logging:$kotlin_logging_version"
        testImplementation "org.slf4j:slf4j-api:$slf4j_version"
        testImplementation "ch.qos.logback:logback-classic:$logback_version"
        testImplementation "junit:junit:$junit_version"
    }

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    spotless {
        java {
            trimTrailingWhitespace()
            endWithNewline()
            licenseHeaderFile "${rootProject.projectDir}/LICENSE_HEADER"
        }
        kotlin {
            trimTrailingWhitespace()
            endWithNewline()
            ktlint("0.15.1")
            licenseHeaderFile "${rootProject.projectDir}/LICENSE_HEADER"
        }
    }
}